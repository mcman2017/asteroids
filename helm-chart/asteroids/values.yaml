# Default values for asteroids game
# This is a YAML-formatted file.

# Global configuration
global:
  imageRegistry: ""
  imagePullSecrets: []

# Frontend configuration
frontend:
  image:
    registry: localhost
    repository: asteroids-frontend
    tag: "latest"
    pullPolicy: IfNotPresent
  
  replicaCount: 1
  
  resources:
    limits:
      cpu: 200m
      memory: 128Mi
    requests:
      cpu: 50m
      memory: 64Mi
  
  service:
    type: ClusterIP
    port: 80
    targetPort: 8080
  
  livenessProbe:
    enabled: true
    httpGet:
      path: /health
      port: http
    initialDelaySeconds: 30
    periodSeconds: 30
  
  readinessProbe:
    enabled: true
    httpGet:
      path: /health
      port: http
    initialDelaySeconds: 5
    periodSeconds: 10

# Backend configuration
backend:
  image:
    registry: localhost
    repository: asteroids-backend
    tag: "latest"
    pullPolicy: IfNotPresent
  
  replicaCount: 1
  
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi
  
  service:
    type: ClusterIP
    port: 3000
    targetPort: 3000
  
  env:
    NODE_ENV: production
    PORT: 3000
  
  livenessProbe:
    enabled: true
    httpGet:
      path: /health
      port: http
    initialDelaySeconds: 30
    periodSeconds: 30
  
  readinessProbe:
    enabled: true
    httpGet:
      path: /health
      port: http
    initialDelaySeconds: 10
    periodSeconds: 10

# PostgreSQL configuration
postgresql:
  enabled: true
  auth:
    postgresPassword: "postgres123"
    username: "gameuser"
    password: "gamepass123"
    database: "asteroids"
  
  primary:
    persistence:
      enabled: true
      size: 5Gi
      storageClass: ""
    
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 128Mi

# Ingress configuration
ingress:
  enabled: true
  className: "nginx"
  annotations:
    cert-manager.io/issuer: letsencrypt
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "1m"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Referrer-Policy "strict-origin-when-cross-origin" always;
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
  hosts:
    - host: asteroids.yourdomain.com
      paths:
        - path: /
          pathType: Prefix
          service: frontend
        - path: /api
          pathType: Prefix
          service: backend
  tls:
    - secretName: asteroids-tls
      hosts:
        - asteroids.yourdomain.com

# Security context
securityContext:
  enabled: true
  runAsNonRoot: true
  runAsUser: 1001
  runAsGroup: 1001
  fsGroup: 1001

# Pod security context
podSecurityContext:
  enabled: true
  fsGroup: 1001

# Service account
serviceAccount:
  create: true
  annotations: {}
  name: ""

# Pod disruption budget
podDisruptionBudget:
  enabled: false
  minAvailable: 1

# Horizontal pod autoscaler
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Network policy
networkPolicy:
  enabled: false
  ingress:
    - from:
      - namespaceSelector:
          matchLabels:
            name: ingress-nginx
      ports:
      - protocol: TCP
        port: 80
      - protocol: TCP
        port: 3000

# Monitoring
monitoring:
  enabled: false
  serviceMonitor:
    enabled: false
    interval: 30s

# Node selection
nodeSelector: {}

# Tolerations
tolerations: []

# Affinity
affinity: {}

# Additional labels
commonLabels: {}

# Additional annotations
commonAnnotations: {}
